---
import { Icon } from 'astro-icon/components'

import Button from './components/Button.astro'

const themes = [
  'light',
  'dark',
  'cupcake',
  'bumblebee',
  'emerald',
  'corporate',
  'synthwave',
  'retro',
  'cyberpunk',
  'valentine',
  'halloween',
  'garden',
  'forest',
  'aqua',
  'lofi',
  'pastel',
  'fantasy',
  'wireframe',
  'black',
  'luxury',
  'dracula',
  'cmyk',
  'autumn',
  'business',
  'acid',
  'lemonade',
  'night',
  'coffee',
  'winter',
  'dim',
  'nord',
  'sunset',
]
---

<div title="Change Theme" class="dropdown dropdown-end" id="theme-selector">
  <div tabindex="0" class="btn btn-ghost gap-1 normal-case">
    <Icon name="heroicons:swatch" class="inline-block h-5 w-5 md:h-6 md:w-6" />
    <span class="hidden md:inline">Theme</span>
    <Icon name="heroicons:chevron-down" class="ml-1 hidden h-4 w-4 opacity-60 sm:inline-block" />
  </div>
  <div
    class="dropdown-content top-px mt-16 h-[70vh] max-h-96 w-52 overflow-y-auto rounded-b-box rounded-t-box bg-base-200 text-base-content shadow-2xl"
  >
    <div class="grid grid-cols-1 gap-3 p-3" tabindex="0">
      {themes.map((theme, idx) => <Button theme={theme} outline={idx === 0} />)}
    </div>
  </div>
</div>
<script>
  import { isTransitionBeforeSwapEvent } from 'astro:transitions/client'

  setTheme(document)
  changeThemeBehavior(document)
  document.addEventListener('astro:before-swap', (e: Event) => {
    if (isTransitionBeforeSwapEvent(e)) {
      setTheme(e.newDocument)
    }
  })
  document.addEventListener('astro:after-swap', () => changeThemeBehavior(document))

  function setTheme(doc: Document) {
    const theme = window.localStorage.getItem('data-theme') ?? 'corporate'
    updateTheme(doc, theme)
  }

  function updateTheme(doc: Document, newTheme: string) {
    doc.querySelector('html')?.setAttribute('data-theme', newTheme)
    window.localStorage.setItem('data-theme', newTheme)
  }

  function changeThemeBehavior(doc: Document) {
    const themeSelectors = doc.querySelectorAll('#theme-selector div[data-theme]')
    themeSelectors.forEach((selector) => {
      selector.addEventListener('click', () => {
        const theme = selector.getAttribute('data-theme')!
        updateTheme(doc, theme)
      })
    })
  }
</script>
